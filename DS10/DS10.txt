import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris
import warnings
warnings.filterwarnings("ignore")

# Load dataset
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['species'] = pd.Categorical.from_codes(iris.target, iris.target_names)

# 1. List down Features and their types
print("Feature Types:")
for col in iris.feature_names:
    print(f"- {col}: numeric")
print("- species: nominal\n")

print("Dataset Preview:\n", df.head(), "\n")
print("Statistics:\n", df.describe())

# 2. Histograms
df.hist(column=iris.feature_names, figsize=(12, 8), grid=False, edgecolor='black')
plt.suptitle("Histograms of Iris Features", fontsize=14)
plt.tight_layout()
plt.show()

# 3. Boxplots
plt.figure(figsize=(12, 8))
for i, col in enumerate(iris.feature_names):
    plt.subplot(2, 2, i+1)
    sns.boxplot(x='species', y=col, data=df)
    plt.title(col)
plt.suptitle("Boxplots of Iris Features", fontsize=14)
plt.tight_layout()
plt.show()

# 4. Distribution comparison & outliers
plt.figure(figsize=(12, 8))
for i, col in enumerate(iris.feature_names):
    plt.subplot(2, 2, i+1)
    sns.violinplot(x='species', y=col, data=df, inner=None, palette='Set2')
    sns.stripplot(x='species', y=col, data=df, color='black', size=3, jitter=True)
    plt.title(f'Distribution of {col}')
plt.suptitle("Distributions and Outliers", fontsize=14)
plt.tight_layout()
plt.show()

# Z-score based outlier detection
z_scores = (df[iris.feature_names] - df[iris.feature_names].mean()) / df[iris.feature_names].std()
outliers = (np.abs(z_scores) > 3)
outlier_counts = outliers.sum()
print("Outliers per Feature (Z-score > 3):\n", outlier_counts)